$options {

    // By including this, the concepts will be displayed in the tree-view in
    // the order that is listed in this file.

    default.order "auto"
    module "basic"
    module "diagon-alley"
    module "great-hall"
    module "school"
    module "hall-of-fame"
}

_concept {->(extends)../_concept
    ->(personal)../_personal
    event +
}

// You are always ready to start learning about hogwarts and so this concept has no prerequisites

basic {->(extends)_concept
    ->(parent)../hogwarts

    event +

    title `Hogwarts Information`
    #layout-resources =`new String[]{"css/basic.css", "css/root-concept.css"}`
}

// Diagon Alley should only be accessed after learning about hogwarts

diagon-alley {->(extends)_concept
    ->(parent)../hogwarts
    ->(prereq)basic

    event +

    title `Diagon Alley`
    #layout-resources =`new String[]{"css/diagon-alley.css", "css/root-concept.css"}`
}

// The great hall should only be accessed after visiting the shops at diagon alley

great-hall {->(extends)_concept
    ->(parent)../hogwarts
    ->(prereq)diagon-alley

    // Mark all hardcoded prerequisite knowledge as known if user has the intermediate knowledge level
    // for basic and diagon alley. Further, mark the children of this concept as known
    // if the user is intermediate or expert

    event +`

        String role = ${_concept->(personal)#role};

        if("intermediate".equals(role)){

            ${#user-available} = true;
            ${#own-knowledge} = 1.0;
            ${#visited}++;

            Concept[] list = ${->(prereq)};
            for (int i = 0; i < list.length; i++) {
                URI uri = session.resolve(list[i].getUri() + "#own-knowledge");
                session.put(uri, new EntityValue(uri, 1d));
                uri = session.resolve(list[i].getUri() + "#visited");
                session.put(uri, new EntityValue(uri, 1));
            }

            list = ${diagon-alley->(prereq)};
            for (int i = 0; i < list.length; i++) {
                URI uri = session.resolve(list[i].getUri() + "#own-knowledge");
                session.put(uri, new EntityValue(uri, 1d));
                uri = session.resolve(list[i].getUri() + "#visited");
                session.put(uri, new EntityValue(uri, 1));
            }

            list = ${diagon-alley<-(parent)};
            for (int i = 0; i < list.length; i++) {
                URI uri = session.resolve(list[i].getUri() + "#own-knowledge");
                session.put(uri, new EntityValue(uri, 1d));
                uri = session.resolve(list[i].getUri() + "#visited");
                session.put(uri, new EntityValue(uri, 1));
            }

            list = ${basic<-(parent)};
            for (int i = 0; i < list.length; i++) {
                URI uri = session.resolve(list[i].getUri() + "#own-knowledge");
                session.put(uri, new EntityValue(uri, 1d));
                uri = session.resolve(list[i].getUri() + "#visited");
                session.put(uri, new EntityValue(uri, 1));
            }
        }
    `

    title `The Great Hall`
    #is-root-concept =`true`;
    #layout-resources =`new String[]{"css/great-hall.css", "css/root-concept.css"}`
}

// School should only be accessed once you have been in the great hall and passed the sorting ceremony

school {->(extends)_concept
    ->(parent)../hogwarts
    ->(prereq)great-hall

    // Mark all prerequisite knowledge as known if user has the expert knowledge level
    // for basic, diagon alley and great hall concepts

    event +`

        if("expert".equals(${_concept->(personal)#role})){

            ${#user-available} = true;
            ${#own-knowledge} = 1.0;

            Concept[] list = ${->(prereq)};
            for (int i = 0; i < list.length; i++) {
                URI uri = session.resolve(list[i].getUri() + "#own-knowledge");
                session.put(uri, new EntityValue(uri, 1d));
                uri = session.resolve(list[i].getUri() + "#visited");
                session.put(uri, new EntityValue(uri, 1));
            }

            list = ${great-hall->(prereq)};
            for (int i = 0; i < list.length; i++) {
                URI uri = session.resolve(list[i].getUri() + "#own-knowledge");
                session.put(uri, new EntityValue(uri, 1d));
                uri = session.resolve(list[i].getUri() + "#visited");
                session.put(uri, new EntityValue(uri, 1));
            }

            list = ${diagon-alley->(prereq)};
            for (int i = 0; i < list.length; i++) {
                URI uri = session.resolve(list[i].getUri() + "#own-knowledge");
                session.put(uri, new EntityValue(uri, 1d));
                uri = session.resolve(list[i].getUri() + "#visited");
                session.put(uri, new EntityValue(uri, 1));
            }

            list = ${great-hall<-(parent)};
            for (int i = 0; i < list.length; i++) {
                URI uri = session.resolve(list[i].getUri() + "#own-knowledge");
                session.put(uri, new EntityValue(uri, 1d));
                uri = session.resolve(list[i].getUri() + "#visited");
                session.put(uri, new EntityValue(uri, 1));
            }

            list = ${diagon-alley<-(parent)};
            for (int i = 0; i < list.length; i++) {
                URI uri = session.resolve(list[i].getUri() + "#own-knowledge");
                session.put(uri, new EntityValue(uri, 1d));
                uri = session.resolve(list[i].getUri() + "#visited");
                session.put(uri, new EntityValue(uri, 1));
            }

            list = ${basic<-(parent)};
            for (int i = 0; i < list.length; i++) {
                URI uri = session.resolve(list[i].getUri() + "#own-knowledge");
                session.put(uri, new EntityValue(uri, 1d));
                uri = session.resolve(list[i].getUri() + "#visited");
                session.put(uri, new EntityValue(uri, 1));
            }
        }
    `

    title `Hogwarts School`
    #layout-resources =`new String[]{"css/school.css", "css/root-concept.css"}`
}

// The hall of fame only unlocks once the prerequisite knowledge at school has been met

hall-of-fame {->(extends)_concept
    ->(parent)../hogwarts
    ->(prereq)school

    title `Hall of Fame`
    event +
    #layout-resources =`new String[]{"css/hall-of-fame.css", "css/root-concept.css"}`
}