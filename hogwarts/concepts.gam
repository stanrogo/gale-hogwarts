//
// @file ./hogwarts/concepts.gam
// @description This is the concepts.gam file that defines the top level concepts of our application
//
// For each concept from now on, we are going to define the css files that should be loaded for that particular concept
//
// @author Stanley Clark <s.clark@student.tue.nl>
// @author Lisette van de Steeg <l.s.j.v.d.steeg@student.tue.nl>
// @author Wesley Brants <w.m.g.brants@student.tue.nl>
// @version 1.0.0
//

// We define 5 modules that link to this module. Further, we include auto ordering in the tree view

$options {
    default.order "auto"
    module "basic"
    module "diagon-alley"
    module "great-hall"
    module "school"
    module "hall-of-fame"
}

// Extend from the root concept for easier use throughout the application

_concept {->(extends)../_concept
    ->(personal)../_personal
    event +
}

// The basic concept, with no prerequisites

basic {->(extends)_concept
    ->(parent)../hogwarts

    event +

    title `Hogwarts Information`
    #layout-resources =`new String[]{"css/basic.css", "css/root-concept.css"}`
}

// Diagon Alley should only be accessed after learning about hogwarts

diagon-alley {->(extends)_concept
    ->(parent)../hogwarts
    ->(prereq)basic

    event +

    title `Diagon Alley`
    #layout-resources =`new String[]{"css/diagon-alley.css", "css/root-concept.css"}`
}

// The great hall should only be accessed after visiting the shops at Diagon Alley
// However, the user can of course override this behaviour, and if the user is an intermediate user,
// and ended up here by making the appropriate selection on the welcome screen, then all concepts before,
// need to be marked as known.

great-hall {->(extends)_concept
    ->(parent)../hogwarts
    ->(prereq)diagon-alley

    title `The Great Hall`
    #layout-resources =`new String[]{"css/great-hall.css", "css/root-concept.css"}`

    event +`
        if("intermediate".equals(${_concept->(personal)#role}) && ${#visited} == 0){

            ${#mark-prereq-all-visited}++;
        }
    `
}

// School should only be accessed once you have been in the great hall and passed the sorting ceremony

school {->(extends)_concept
    ->(parent)../hogwarts
    ->(prereq)great-hall

    title `School`
    #layout-resources =`new String[]{"css/school.css", "css/root-concept.css"}`
    #unsuitable-resource =`"".equals(${_concept->(personal)#user-house}) ? "[[=sorting-popup.xhtml]]" : "[[=unsuitable.xhtml]]"`

    // Mark all prerequisite knowledge as known if user has the expert knowledge level
    // for basic, diagon alley and great hall concepts

    event +`
        if("expert".equals(${_concept->(personal)#role}) && ${#visited} == 0){

            ${#mark-prereq-all-visited}++;
        }

        Concept[] courses = new Concept[]{${school/dada}, ${school/transfiguration}, ${school/herbology}, ${school/potions}};

        ArrayList nonAffiliatedCourses = new ArrayList();
        ArrayList affiliatedConcepts = new ArrayList();

        for (int i = 0; i < courses.length; i++){

            URI uri = session.resolve(courses[i].getUri() + "#affiliation");
            EntityValue ev = (EntityValue)session.get(uri);
            String affiliation = (String) ev.getValue();
            Boolean isAffiliated = affiliation.equals(${_concept->(personal)#user-house});

            uri = session.resolve(courses[i].getUri() + "#known");
            ev = (EntityValue)session.get(uri);
            Boolean isKnown = (Boolean)ev.getValue();

            if (isAffiliated && !isKnown) {

                affiliatedConcepts.add(courses[i].getUriString());
            }
            else if(!isKnown){

                nonAffiliatedCourses.add(courses[i].getUriString());
            }
        }

        if (affiliatedConcepts.size() > 0){

            ${_concept->(personal)#next-recommended} = Objects.toString(affiliatedConcepts.get(0), null);
        }
        else if (nonAffiliatedCourses.size() > 0) {

            int position = (int) Math.round(Math.random() * (nonAffiliatedCourses.size() - 1));
            ${_concept->(personal)#next-recommended} = Objects.toString(nonAffiliatedCourses.get(position), null);
        }
        else if (nonAffiliatedCourses.size() == 0) {
            ${_concept->(personal)#next-recommended} = ${hall-of-fame}.getUriString();
        }
    `
}

// The hall of fame only unlocks once the prerequisite knowledge at school has been met

hall-of-fame {->(extends)_concept
    ->(parent)../hogwarts
    ->(prereq)great-hall

    title `Hall of Fame`
    #layout-resources =`new String[]{"css/hall-of-fame.css", "css/root-concept.css"}`
    #unsuitable-resource =`"".equals(${_concept->(personal)#user-house}) ? "[[=sorting-popup.xhtml]]" : "[[=unsuitable.xhtml]]"`

    event +
}